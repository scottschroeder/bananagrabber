version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - AWS_ACCOUNT_ID=$(aws --region $AWS_DEFAULT_REGION sts --endpoint-url https://sts.$AWS_DEFAULT_REGION.amazonaws.com get-caller-identity --query 'Account' --output text)
      - REGISTRY="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com"
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REGISTRY
  build:
    commands:
      - echo Build started on `date`
      - VERSIONED_IMAGE="$IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION"
      - BUILDSPEC_IMAGE="$IMAGE_REPO_NAME:$IMAGE_TAG"
      - echo Building the Docker image for $VERSIONED_IMAGE
      - echo ${CODEBUILD_RESOLVED_SOURCE_VERSION} > version.txt
      - echo $REGISTRY/$VERSIONED_IMAGE > target
      - docker build --build-arg REGISTRY=public.ecr.aws/docker/library -t $BUILDSPEC_IMAGE .
      - docker tag $BUILDSPEC_IMAGE $REGISTRY/$BUILDSPEC_IMAGE
      - docker tag $BUILDSPEC_IMAGE $REGISTRY/$VERSIONED_IMAGE
  post_build:
    commands:
      - bash -c "if [ /"$CODEBUILD_BUILD_SUCCEEDING/" == /"0/" ]; then exit 1; fi"
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $REGISTRY/$BUILDSPEC_IMAGE
      - docker push $REGISTRY/$VERSIONED_IMAGE
artifacts:
  files:
    - 'appspec.yml'
    - 'scripts'
    - 'version.txt'
    - 'target'
